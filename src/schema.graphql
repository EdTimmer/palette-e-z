# import UserOrderByInput from './generated/prisma.graphql'

type Query {
  users(query: String, first: Int, skip: Int, after: String, orderBy: UserOrderByInput): [User!]!
  me: User!  
  palettes: [Palette!]!
}

type Mutation {
  createUser(data: CreateUserInput!): AuthPayload!
  login(data: LoginUserInput!): AuthPayload!
  deleteUser: User!
  updateUser(data: UpdateUserInput!): User!  
  createPalette(data: CreatePaletteInput!): Palette!
}

# type Subscription {

# }

type AuthPayload {
  token: String!
  user: User!
}

input CreateUserInput {
  name: String!
  email: String!
  password: String!
}

input LoginUserInput {
  email: String!
  password: String!
}

input UpdateUserInput {
  name: String
  email: String
  password: String
}

input CreatePaletteInput {
  name: String!
  description: String!
  colors: [String!]!
}

type User {
  id: ID!
  name: String!
  email: String
  password: String!
  palettes: [Palette!]!
  updatedAt: String!
  createdAt: String!
}

type Palette {
  id: ID!
  name: String!
  description: String
  colors: [String!]!
  author: User!
}

enum MutationType {
  CREATED,
  UPDATED,
  DELETED
}
